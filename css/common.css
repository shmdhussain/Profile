/*END:partial scss files 
to be included in all the css files to be generated */
/*START:Flexbox Mixins */
/*END:Flexbox Mixins */
/*START:Aspect Ratio Mixins */
/*END:Aspect Ratio Mixins */
/*START: Stop scss converting hsl color into hex */
/*END:  Stop scss converting hsl color into hex */
/*START:Find lower and upper bound in the param passed as (lower_bound, uper_bound) */
/*END:Find lower and upper bound in the param passed as (lower_bound, uper_bound) */
/*START:mixin for responsive units, that is from 100 to 200px screen size 
        go from min to max point
        and before min resolution(100px) that min value 
        and after 200(maximum resolution) max value */
/*END:  mixin for responsive units, that is from 100 to 200px screen size 
        go from min to max point
        and before min resolution(100px) that min value 
        and after 200(maximum resolution) max value */
/*START:Media Breakpoints */
/*END:Media Breakpoints */
/*END:partial scss files 
to be included in all the css files to be generated */
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

@font-face {
  font-family: 'Inter';
  src: url("font/Inter-ExtraLight-BETA.woff2") format("woff2"), url("font/Inter-ExtraLight-BETA.woff") format("woff");
  font-weight: 200; }

@font-face {
  font-family: 'Inter';
  src: url("font/Inter-Regular.woff2") format("woff2"), url("font/Inter-Regular.woff") format("woff");
  font-weight: 400; }

@font-face {
  font-family: 'Inter';
  src: url("font/Inter-Medium.woff2") format("woff2"), url("font/Inter-Medium.woff") format("woff");
  font-weight: 500; }

@font-face {
  font-family: 'Inter';
  src: url("font/Inter-SemiBold.woff2") format("woff2"), url("font/Inter-SemiBold.woff") format("woff");
  font-weight: 600; }

@font-face {
  font-family: 'Inter';
  src: url("font/Inter-Bold.woff2") format("woff2"), url("font/Inter-Bold.woff") format("woff");
  font-weight: 700; }

html body {
  line-height: 1.5;
  box-sizing: border-box;
  font-family: Inter, -apple-system, Segoe UI, Roboto, Noto Sans, Ubuntu, Cantarell, Helvetica Neue  !important;
  color: hsl(209, 61%, 16%); }

* {
  box-sizing: border-box; }

img {
  max-width: 100%;
  height: auto; }

.sh_bold {
  font-weight: bold; }

.sh_semi_bold {
  font-weight: 600; }

.sh_medium {
  font-weight: 500; }

/*START:	color variables declaration */
:root {
  --cn_1:  hsl(209, 61%, 16%);
  --cn_2:  hsl(211, 39%, 23%);
  --cn_3:  hsl(209, 34%, 30%);
  --cn_4:  hsl(209, 28%, 39%);
  --cn_5:  hsl(210, 22%, 49%);
  --cn_6:  hsl(209, 23%, 60%);
  --cn_7:  hsl(211, 27%, 70%);
  --cn_8:  hsl(210, 31%, 80%);
  --cn_9:  hsl(212, 33%, 89%);
  --cn_10: hsl(210, 36%, 96%);
  --cp_1:  hsl(184, 91%, 17%);
  --cp_2:  hsl(185, 84%, 25%);
  --cp_3:  hsl(185, 81%, 29%);
  --cp_4:  hsl(184, 77%, 34%);
  --cp_5:  hsl(185, 62%, 45%);
  --cp_6:  hsl(185, 57%, 50%);
  --cp_7:  hsl(184, 65%, 59%);
  --cp_8:  hsl(184, 80%, 74%);
  --cp_9:  hsl(185, 94%, 87%);
  --cp_10: hsl(186, 100%, 94%);
  --fs_1:  12px;
  --fs_2:  14px;
  --fs_3:  16px;
  --fs_4:  18px;
  --fs_5:  20px;
  --fs_6:  24px;
  --fs_7:  30px;
  --fs_8:  36px;
  --fs_9:  48px;
  --fs_10: 60px;
  --fs_11: 72px; }

/*END:	color variables declaration */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
